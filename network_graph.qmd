---
title: "network_graph"
format: html
editor: source
---

### Load Packages
```{r}
if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

librarian::shelf(tidyverse, here, igraph)
```

## Make Data Frame
Teams: Database, Sierra Nevada, Panama, Brazil, Pennsylvania, Genetics, Ecophysiology & Environmental Data, 
eDNA, AMPs, Microbiome, Occupancy & Abundance, Outreach, Modeling, Mucosume
```{r}

t <- make_graph(~ Database+-"Sierra Nevada":Panama:Brazil:Pennsylvania,
                
                "Sierra Nevada"-+ Genetics -+ Database,
                Panama -+ Genetics-+Database,
                Brazil -+ Genetics-+Database,
                Pennsylvania -+ Genetics-+Database,
                
                "Sierra Nevada"-+ AMPs -+ Database,
                Panama -+ AMPs-+Database,
                Brazil -+ AMPs-+Database,
                Pennsylvania -+ AMPs-+Database,
                
                 "Sierra Nevada"-+ "Ecophysiology & Environmental" -+ Database,
                Panama -+ "Ecophysiology & Environmental"-+Database,
                Brazil -+ "Ecophysiology & Environmental"-+Database,
                Pennsylvania -+ "Ecophysiology & Environmental" -+Database,
                
                "Sierra Nevada"-+ eDNA -+ Database,
                Panama -+ eDNA-+Database,
                Brazil -+ eDNA-+Database,
                Pennsylvania -+ eDNA -+Database,
                
                "Sierra Nevada"-+ Microbiome -+ Database,
                Panama -+ Microbiome-+Database,
                Brazil -+ Microbiome-+Database,
                Pennsylvania -+ Microbiome -+Database,
                
                
                "Sierra Nevada"-+ Mucosume -+ Database,
                Panama -+ Mucosume-+Database,
                Brazil -+ Mucosume-+Database,
                Pennsylvania -+ Mucosume -+Database,
                
                Database -+ Modeling,
                
                Database -+ "Occupancy & Abundance") %>%
  set_vertex_attr("rank", value = c(2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 4, 4)) %>% 
  set_edge_attr("color", value = c("blue", "red"))
  

# Get the ranks of the connected vertices for each edge
edge_ranks <- sapply(E(t), function(e) c(V(t)[e]$rank[1], V(t)[e]$rank[2]))

# Set edge colors based on the ranks of connected vertices
edge_colors <- ifelse(edge_ranks %in% c(1, 2), "blue", "red")

layout <- layout_with_kk(t, k=0.1)

plot.igraph(t, 
            layout =layout,
            main = "RIBBiTR Network",
            edge.arrow.size = 0.3,
            vertex.label.cex = 0.7, 
            #vertex.shape="none",
            edge.curved = T,
            vertex.color=as.factor(V(t)$rank))

#layout_with_sugiyama(t, layers = V(t)$rank, hgap = 1, vgap = 1)

```

```{r}

g <- make_graph(~ Alice-Bob:Claire:Frank, Claire-Alice:Dennis:Frank:Esther,
                George-Dennis:Frank, Dennis-Esther) %>%
  set_vertex_attr("age", value = c(25, 31, 18, 23, 47, 22, 50)) %>%
  set_vertex_attr("gender", value = c("f", "m", "f", "m", "m", "f", "m")) %>%
  set_edge_attr("is_formal", value = c(FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, FALSE))

men <- V(g)[age == 25]$name

plot(g)
```

