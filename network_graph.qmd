---
title: "network_graph"
format: html
editor: source
---

### Load Packages
```{r}
if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

librarian::shelf(tidyverse, here, igraph)
```

## Make Data Frame
Teams: Database, Sierra Nevada, Panama, Brazil, Pennsylvania, Genetics, Ecophysiology & Environmental Data, 
eDNA, AMPs, Microbiome, Occupancy & Abundance, Outreach, Modeling, Mucosume
```{r}

g <- make_graph(~ Database+"Sierra Nevada":Panama:Brazil:Pennsylvania:Genetics:
                  "Ecophysiology & Environmental Data":eDNA:AMPs:Microbiome:"Occupancy & Abundance":Outreach:
                  Modeling:Mucosome,
                
                "Sierra Nevada"+ Genetics:"Ecophysiology & Environmental Data":eDNA:AMPs:Microbiome:
                  "Occupancy & Abundance":Outreach:Modeling:Mucosome:Database,
                
                Panama+ Genetics:"Ecophysiology & Environmental Data":eDNA:AMPs:Microbiome:
                  "Occupancy & Abundance":Outreach:Modeling:Mucosome:Database,
                
                Pennsylvania+ Genetics:"Ecophysiology & Environmental Data":eDNA:AMPs:Microbiome:
                  "Occupancy & Abundance":Outreach:Modeling:Mucosome:Database,
                
                Brazil+ Genetics:"Ecophysiology & Environmental Data":eDNA:AMPs:Microbiome:
                  "Occupancy & Abundance":Outreach:Modeling:Mucosome:Database,
                
                Genetics+ "Sierra Nevada":Panama:Brazil:Pennsylvania:Database,
                "Ecophysiology & Environmental Data"- "Sierra Nevada":Panama:Brazil:Pennsylvania:Database,
                
                eDNA+ "Sierra Nevada":Panama:Brazil:Pennsylvania:Database,
                
                AMPs+ "Sierra Nevada":Panama:Brazil:Pennsylvania:Database,
                
                Microbiome+ "Sierra Nevada":Panama:Brazil:Pennsylvania:Database,
                "Occupancy & Abundance"- "Sierra Nevada":Panama:Brazil:Pennsylvania:Database,
                
                Outreach+ "Ecophysiology & Environmental Data":AMPs:Microbiome:Mucosome:Database,
                
                Modeling+ "Sierra Nevada":Panama:Brazil:Pennsylvania:Genetics:
                  "Ecophysiology & Environmental Data":eDNA:AMPs:Microbiome:"Occupancy & Abundance":
                  Modeling:Mucosome:Database,
                
                Mucosome+ "Sierra Nevada":Panama:Brazil:Pennsylvania:Database) %>% 
  reverse_edges() %>% 
  set_vertex_attr("rank", value = c(2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 4, 4, 3))




Database+"Sierra Nevada":Panama:Brazil:Pennsylvania:Genetics:
                  "Ecophysiology & Environmental Data":eDNA:AMPs:Microbiome:"Occupancy & Abundance":Outreach:
                  Modeling:Mucosome


layout.by.attr <- function(graph, wc, cluster.strength=1,layout=layout.auto) {  
  g <- graph.edgelist(get.edgelist(graph)) # create a lightweight copy of graph w/o the attributes.
  E(g)$weight <- 1

  attr <- cbind(id=1:vcount(g), val=wc)
  g <- g + vertices(unique(attr[,2])) + igraph::edges(unlist(t(attr)), weight=cluster.strength)

  l <- layout(g, weights=E(g)$weight)[1:vcount(graph),]
  return(l)
}

layout.by.attr(g, wc=5)
layout <- layout_with_kk(g)

plot.igraph(g, 
            layout = layout_with_sugiyama(g, layers = V(g)$rank, hgap = 10, vgap = 10), 
            main = "RIBBiTR Network",
            edge.arrow.size = 0.3,
            vertex.label.cex = 0.7, 
            #vertex.shape="none",
            edge.curved = T,
            vertex.color=as.factor(V(g)$rank))

tkplot(g)


degree(g)
g

get.adjacency(g)


```

```{r}

g <- make_graph(~ Alice-Bob:Claire:Frank, Claire-Alice:Dennis:Frank:Esther,
                George-Dennis:Frank, Dennis-Esther) %>%
  set_vertex_attr("age", value = c(25, 31, 18, 23, 47, 22, 50)) %>%
  set_vertex_attr("gender", value = c("f", "m", "f", "m", "m", "f", "m")) %>%
  set_edge_attr("is_formal", value = c(FALSE, FALSE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, FALSE))

men <- V(g)[age == 25]$name

plot(g)
```

