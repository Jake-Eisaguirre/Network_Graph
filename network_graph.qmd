---
title: "network_graph"
format: html
editor: source
---

### Load Packages
```{r}
if (!require(librarian)){
  install.packages("librarian")
  library(librarian)
}

librarian::shelf(tidyverse, here, igraph)
```

## Make Data Frame
Teams: Database, Sierra Nevada, Panama, Brazil, Pennsylvania, Genetics, Ecophysiology Data, 
eDNA, AMPs, Microbiome, Occupancy & Abundance, Outreach, Modeling, Mucosume
```{r}

t <- make_graph(~ Database+-"Sierra Nevada":Panama:Brazil:Pennsylvania,
                
                "Sierra Nevada"-+ Genetics -+ Database,
                Panama -+ Genetics-+Database,
                Brazil -+ Genetics-+Database,
                Pennsylvania -+ Genetics-+Database,
                
                "Sierra Nevada"-+ AMPs -+ Database,
                Panama -+ AMPs-+Database,
                Brazil -+ AMPs-+Database,
                Pennsylvania -+ AMPs-+Database,
                
                 "Sierra Nevada"-+ "Ecophysiology" -+ Database,
                Panama -+ "Ecophysiology"-+Database,
                Brazil -+ "Ecophysiology"-+Database,
                Pennsylvania -+ "Ecophysiology" -+Database,
                
                "Sierra Nevada"-+ eDNA -+ Database,
                Panama -+ eDNA-+Database,
                Brazil -+ eDNA-+Database,
                Pennsylvania -+ eDNA -+Database,
                
                "Sierra Nevada"-+ Microbiome -+ Database,
                Panama -+ Microbiome-+Database,
                Brazil -+ Microbiome-+Database,
                Pennsylvania -+ Microbiome -+Database,
                
                
                "Sierra Nevada"-+ Mucosume -+ Database,
                Panama -+ Mucosume-+Database,
                Brazil -+ Mucosume-+Database,
                Pennsylvania -+ Mucosume -+Database,
                
                Outreach -+ Database,
                
                Database -+ Modeling,
                
                Database -+ "Occupancy & Abundance",
                
                Database -+ "Outreach",
                
                "Occupancy & Abundance" -+ Modeling) %>%
  set_vertex_attr("rank", value = c(2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 4, 4, 4)) %>% 
  set_edge_attr("color", value = c("red", "red", "red", "blue", "blue", "blue", "blue", "blue","blue",
                                   "blue", "blue", "blue", "blue", "blue", "blue", "blue",
                                   "blue", "blue", "blue", "blue", "blue", "blue",
                                   "blue", "blue", "blue", "blue", "blue", "blue", "blue", "blue", "blue",
                                   "purple", "purple", "purple", "purple", "purple", "purple", "cyan", "cyan"))
  


LO <- layout_nicely(t)

#Rank 1
TopRow <- which(LO$layout[,2] == 4)
LO$layout[TopRow,1] <- seq(1,100, length.out=length(TopRow))

# Database node
LO$layout[1,1] <- 40

# Rank 3
Row2 <- which(LO$layout[,2] == 2)

LO$layout[Row2,1] <- seq(5,95, length.out=length(Row2))
LO$layout[Row2,2] <- rep(c(2.3,1.8), length.out=6)


# Rank 4
BottomRow <- which(LO$layout[,2] == 1)
LO$layout[BottomRow,1] <- seq(1,100, length.out=length(BottomRow))

node.size= c(10,10,10, 10, 10,10,10, 10, 10,10,10, 10, 10,10)


plot(t, 
     layout =LO,
     main = "RIBBiTR Network",
     edge.arrow.size = 0.3,
     vertex.label.cex = 0.7, 
     #vertex.shape="none",
     edge.curved = T,
     vertex.color=as.factor(V(t)$rank),
     edge.width = 1.1,
     vertex.color = "black",
     vertex.size=node.size*2) +

legend("bottomright",
       legend = c("Primary Data", "Secondary Data", "Tertiary Data", "Quaternary Data"),
       fill = c("blue", "purple", "red", "cyan"),
       cex=0.5)

```

```{r}

# Create the graph
t <- make_graph(~ Database+-"Sierra Nevada":Panama:Brazil:Pennsylvania,
                
                "Sierra Nevada"-+ Genetics -+ Database,
                Panama -+ Genetics-+Database,
                Brazil -+ Genetics-+Database,
                Pennsylvania -+ Genetics-+Database,
                
                "Sierra Nevada"-+ AMPs -+ Database,
                Panama -+ AMPs-+Database,
                Brazil -+ AMPs-+Database,
                Pennsylvania -+ AMPs-+Database,
                
                "Sierra Nevada"-+ "Ecophysiology" -+ Database,
                Panama -+ "Ecophysiology"-+Database,
                Brazil -+ "Ecophysiology"-+Database,
                Pennsylvania -+ "Ecophysiology" -+Database,
                
                "Sierra Nevada"-+ eDNA -+ Database,
                Panama -+ eDNA-+Database,
                Brazil -+ eDNA-+Database,
                Pennsylvania -+ eDNA -+Database,
                
                "Sierra Nevada"-+ Microbiome -+ Database,
                Panama -+ Microbiome-+Database,
                Brazil -+ Microbiome-+Database,
                Pennsylvania -+ Microbiome -+Database,
                
                "Sierra Nevada"-+ Mucosume -+ Database,
                Panama -+ Mucosume-+Database,
                Brazil -+ Mucosume-+Database,
                Pennsylvania -+ Mucosume -+Database,
                
                Database -+ Modeling,
                
                Database -+ "Occupancy & Abundance") %>%
  set_vertex_attr("rank", value = c(2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 4, 4)) %>% 
  set_edge_attr("color", value = c("red", "red", "blue", "blue", "blue", "blue", "blue", "blue", "blue", "blue",
                                   "blue", "blue", "blue", "blue", "blue", "blue", "blue", "blue", "blue", "blue",
                                   "blue", "blue", "blue", "blue", "blue", "blue", "blue", "blue", "blue", "blue",
                                   "purple", "purple", "purple", "purple", "purple", "purple"))

# Set up the layout
layout <- layout_with_kk(t, kkconst = 0.001)

# Plot the graph with improved visual parameters
plot.igraph(t, 
            layout = layout,
            main = "RIBBiTR Network",
            edge.arrow.size = 0.3,
            vertex.label.cex = 0.7, 
            vertex.size = 20,  # Adjust vertex size
            vertex.color = as.factor(V(t)$rank),
            vertex.frame.color = "white",  # Add white border to vertices
            edge.curved = TRUE,
            edge.color = E(t)$color,  # Use edge colors from attributes
            edge.width = 2  # Increase edge width
)
```

